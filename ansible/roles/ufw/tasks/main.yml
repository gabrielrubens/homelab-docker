# ansible/roles/ufw/tasks/main.yml
---
- block:
    - name: Ensure UFW is installed
      ansible.builtin.apt:
        name: ufw
        state: present

    - name: Ensure UFW is enabled
      community.general.ufw:
        state: enabled
        policy: deny # Deny incoming by default

    - name: Allow SSH
      community.general.ufw:
        rule: allow
        name: OpenSSH # Using the application profile
        comment: "Allow SSH connections"

    - name: Allow Homepage dashboard
      community.general.ufw:
        rule: allow
        port: "{{ homepage_port }}"
        proto: tcp
        comment: "Allow Homepage dashboard UI (Port {{ homepage_port }})"
      when: homepage_port is defined

    - name: Allow Glances system monitor
      community.general.ufw:
        rule: allow
        port: "{{ glances_port }}"
        proto: tcp
        comment: "Allow Glances system monitor UI (Port {{ glances_port }})"
      when: glances_port is defined

    - name: Allow Netdata monitor
      community.general.ufw:
        rule: allow
        port: "{{ netdata_port }}"
        proto: tcp
        comment: "Allow Netdata real-time monitor UI (Port {{ netdata_port }})"
      when: netdata_port is defined

    - name: Allow Portainer
      community.general.ufw:
        rule: allow
        port: "{{ portainer_port | default('9000') }}"
        proto: tcp
        comment: "Allow Portainer UI (Port {{ portainer_port | default('9000') }})"
      when: portainer_port is defined or true # Assuming Portainer is always deployed or has a default

    - name: Allow AdGuard Home DNS (TCP)
      community.general.ufw:
        rule: allow
        port: "{{ adguard_dns_port }}"
        proto: tcp
        comment: "Allow AdGuard Home DNS (TCP Port {{ adguard_dns_port }})"
      when: adguard_dns_port is defined

    - name: Allow AdGuard Home DNS (UDP)
      community.general.ufw:
        rule: allow
        port: "{{ adguard_dns_port }}"
        proto: udp
        comment: "Allow AdGuard Home DNS (UDP Port {{ adguard_dns_port }})"
      when: adguard_dns_port is defined

    - name: Allow AdGuard Home Web UI
      community.general.ufw:
        rule: allow
        port: "{{ adguard_ui_port }}"
        proto: tcp
        comment: "Allow AdGuard Home Web UI (Port {{ adguard_ui_port }})"
      when: adguard_ui_port is defined

    - name: Allow Uptime Kuma UI
      community.general.ufw:
        rule: allow
        port: "{{ uptime_kuma_port }}"
        proto: tcp
        comment: "Allow Uptime Kuma monitoring UI (Port {{ uptime_kuma_port }})"
      when: uptime_kuma_port is defined

    - name: Allow OpenSpeedTest UI
      community.general.ufw:
        rule: allow
        port: "{{ openspeedtest_port }}"
        proto: tcp
        comment: "Allow OpenSpeedTest UI (Port {{ openspeedtest_port }})"
      when: openspeedtest_port is defined

    - name: Allow WireGuard (UDP)
      community.general.ufw:
        rule: allow
        port: "{{ wireguard_int_port }}" # UFW opens the internal host listening port
        proto: udp
        comment: "Allow WireGuard VPN (UDP Port {{ wireguard_int_port }} - Host Listen Port)"
      when: wireguard_int_port is defined

    - name: Allow Home Assistant UI
      community.general.ufw:
        rule: allow
        port: "{{ home_assistant_port }}"
        proto: tcp
        comment: "Allow Home Assistant UI (Port {{ home_assistant_port }})"
      when: home_assistant_port is defined

    - name: Allow qBittorrent Web UI
      community.general.ufw:
        rule: allow
        port: "{{ qbittorrent_port }}"
        proto: tcp
        comment: "Allow qBittorrent Web UI (Port {{ qbittorrent_port }})"
      when: qbittorrent_port is defined

    - name: Allow qBittorrent Torrenting (TCP)
      community.general.ufw:
        rule: allow
        port: "{{ qbittorrent_tcp_port }}"
        proto: tcp
        comment: "Allow qBittorrent Torrenting (TCP Port {{ qbittorrent_tcp_port }})"

    - name: Allow qBittorrent Torrenting (UDP)
      community.general.ufw:
        rule: allow
        port: "{{ qbittorrent_udp_port }}"
        proto: udp
        comment: "Allow qBittorrent Torrenting (UDP Port {{ qbittorrent_udp_port }})"

    - name: Allow Sonarr Web UI
      community.general.ufw:
        rule: allow
        port: "{{ sonarr_port }}"
        proto: tcp
        comment: "Allow Sonarr Web UI (Port {{ sonarr_port }})"
      when: sonarr_port is defined

    - name: Allow Radarr Web UI
      community.general.ufw:
        rule: allow
        port: "{{ radarr_port }}"
        proto: tcp
        comment: "Allow Radarr Web UI (Port {{ radarr_port }})"
      when: radarr_port is defined

    - name: Allow Lidarr Web UI
      community.general.ufw:
        rule: allow
        port: "{{ lidarr_port }}"
        proto: tcp
        comment: "Allow Lidarr Web UI (Port {{ lidarr_port }})"
      when: lidarr_port is defined

    - name: Allow Bazarr Web UI
      community.general.ufw:
        rule: allow
        port: "{{ bazarr_port }}"
        proto: tcp
        comment: "Allow Bazarr Web UI (Port {{ bazarr_port }})"
      when: bazarr_port is defined

    - name: Allow Jellyseerr Web UI
      community.general.ufw:
        rule: allow
        port: "{{ jellyseerr_port }}"
        proto: tcp
        comment: "Allow Jellyseerr Web UI (Port {{ jellyseerr_port }})"
      when: jellyseerr_port is defined

    - name: Allow Jellyfin Web UI
      community.general.ufw:
        rule: allow
        port: "{{ jellyfin_port }}"
        proto: tcp
        comment: "Allow Jellyfin Web UI (Port {{ jellyfin_port }})"
      when: jellyfin_port is defined

    - name: Allow Prowlarr Web UI
      community.general.ufw:
        rule: allow
        port: "{{ prowlarr_port }}"
        proto: tcp
        comment: "Allow Prowlarr Web UI (Port {{ prowlarr_port }})"
      when: prowlarr_port is defined

  #become: true
  become: yes
  when: ansible_connection != "local"
  tags: ufw_config