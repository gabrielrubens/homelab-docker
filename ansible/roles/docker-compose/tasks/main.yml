# ansible/roles/docker-compose/tasks/main.yml
---
- name: Ensure apt cache is up to date
  apt:
    update_cache: yes

- name: Install Docker Compose plugin via apt
  apt:
    name: docker-compose-plugin
    state: present
  register: dc_apt
  failed_when: false

- name: Ensure python3-pip is installed (for pip fallback & venv support)
  apt:
    name: python3-pip
    state: present

- name: Install distro Docker SDK & requests packages
  apt:
    name:
      - python3-docker
      - python3-requests
    state: present

- name: Install legacy docker-compose via pip3 if plugin not available
  pip:
    name: docker-compose
    executable: pip3
  when: dc_apt.failed

- name: Check if override file exists
  ansible.builtin.stat:
    path: "{{ homelab_dest }}/docker-compose.override.yml"
  register: override_file_stat

- name: Build list of compose files
  set_fact:
    compose_files: >-
      {{
        [ 'docker-compose.yml' ]
        + ( override_file_stat.stat.exists | bool
            and [ 'docker-compose.override.yml' ] or [] )
      }}

- name: Ensure AdGuard host work directory exists and has strict permissions
  ansible.builtin.file:
    path: "{{ homelab_dest }}/adguardhome/work"
    state: directory
    mode: '0700'
    recurse: yes

- name: Ensure AdGuard host conf directory exists and has strict permissions
  ansible.builtin.file:
    path: "{{ homelab_dest }}/adguardhome/conf"
    state: directory
    mode: '0700'
    recurse: yes

- name: Ensure .env file is configured on the server from template
  ansible.builtin.template:
    src: .env.j2
    dest: "{{ homelab_dest }}/.env"
    mode: '0600' # Secure permissions for a file that might contain secrets
  when: ansible_connection != "local"

- name: Tear down any existing homelab stack
  community.docker.docker_compose_v2:
    project_src: "{{ homelab_dest }}"
    files: "{{ compose_files }}"
    state: absent
    remove_orphans: true
    remove_volumes: true
    env_files:
      - "{{ homelab_dest }}/.env"
    env:
      # Explicitly set variables that seem to be problematic
      # Values are sourced from Ansible variables
      homepage_port: "{{ homepage_port }}"
      adguard_ui_port: "{{ adguard_ui_port }}"
      adguard_dns_port: "{{ adguard_dns_port }}"
      # We can add others if they also show issues, but start with these.
      # HOMELAB_DOCKER_PATH is also crucial and in the .env file.
      # Docker Compose should pick it up from .env, but if issues persist,
      # we could add it here too:
      # HOMELAB_DOCKER_PATH: "{{ homelab_dest }}"

- name: Bring up the full homelab stack
  community.docker.docker_compose_v2:
    project_src: "{{ homelab_dest }}"
    files: "{{ compose_files }}"
    state: present
    pull: always
    recreate: auto
    env_files:
      - "{{ homelab_dest }}/.env"
    env:
      # Explicitly set variables that seem to be problematic
      homepage_port: "{{ homepage_port }}"
      adguard_ui_port: "{{ adguard_ui_port }}"
      adguard_dns_port: "{{ adguard_dns_port }}"
      # HOMELAB_DOCKER_PATH: "{{ homelab_dest }}"

# Post-deploy: fix in-container permissions so AdGuard will serve its UI
- name: Fix AdGuard “work” directory permissions in-container
  ansible.builtin.command: >
    docker exec adguardhome chmod 0700 /opt/adguardhome/work
  become: true
  when: inventory_hostname == 'homelab-server'

- name: Fix AdGuard “conf” directory permissions in-container
  ansible.builtin.command: >
    docker exec adguardhome chmod 0700 /opt/adguardhome/conf
  become: true
  when: inventory_hostname == 'homelab-server'